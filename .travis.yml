# Travis CI configuration.
# Each implementation is listed using the matrix:include configuration.

# Use sudo: required slows boot time but gives us 7.5GB of ram to prevent Bazel running OOM.
sudo: required
dist: bionic

matrix:
  include:
    # C implementation. Lives in c/, tested with bazel.
    - language: c
      env: OLC_PATH=c
      script:
        - wget -O install.sh "https://github.com/bazelbuild/bazel/releases/download/0.24.1/bazel-0.24.1-installer-linux-x86_64.sh"
        - chmod +x install.sh
        - ./install.sh --user && rm -f install.sh
        - ~/bin/bazel test --test_output=all ${OLC_PATH}:all
        - cd ${OLC_PATH} && bash clang_check.sh

    # C++ implementation. Lives in cpp/, tested with bazel.
    - language: cpp
      env: OLC_PATH=cpp
      script:
        - wget -O install.sh "https://github.com/bazelbuild/bazel/releases/download/0.24.1/bazel-0.24.1-installer-linux-x86_64.sh"
        - chmod +x install.sh
        - ./install.sh --user && rm -f install.sh
        - ~/bin/bazel test --test_output=all ${OLC_PATH}:all
        - cd cpp && bash clang_check.sh

    # Dart implementation. Lives in dart/
    - language: dart
      dart: stable
      env: OLC_PATH=dart
      script:
        - cd ${OLC_PATH}
        - pub get && pub run test
        - bash checks.sh

    # Go implementation. Lives in go/. Tests fail if files have not been formatted with gofmt.
    - language: go
      go: stable
      env: OLC_PATH=go
      script:
        - diff -u <(echo -n) <(gofmt -d -s ./go)
        - go test -bench=. ./go -v
        - go test ./tile_server/gridserver -v

    # Java implementation. Lives in java/, tested with bazel and maven.
    # Only testing LTS releases of oraclejdk
    # Ref: https://www.oracle.com/technetwork/java/java-se-support-roadmap.html
    - language: java
      jdk: oraclejdk8
      # Java 8 requires dist: trusty
      dist: trusty
      env: OLC_PATH=java
      script:
        - wget -O install.sh "https://github.com/bazelbuild/bazel/releases/download/0.24.1/bazel-0.24.1-installer-linux-x86_64.sh"
        - chmod +x install.sh
        - ./install.sh --user && rm -f install.sh
        - ~/bin/bazel test --test_output=all ${OLC_PATH}:all && cd ${OLC_PATH} && mvn package

    # Java implementation. Lives in java/, tested with bazel and maven.
    - language: java
      jdk: openjdk8
      # Java 8 requires dist: trusty
      dist: trusty
      env: OLC_PATH=java
      script:
        - wget -O install.sh "https://github.com/bazelbuild/bazel/releases/download/0.24.1/bazel-0.24.1-installer-linux-x86_64.sh"
        - chmod +x install.sh
        - ./install.sh --user && rm -f install.sh
        - ~/bin/bazel test --test_output=all ${OLC_PATH}:all && cd ${OLC_PATH} && mvn package

    # Java implementation. Lives in java/, tested with bazel and maven.
    - language: java
      jdk: openjdk9
      env: OLC_PATH=java
      script:
        - wget -O install.sh "https://github.com/bazelbuild/bazel/releases/download/0.24.1/bazel-0.24.1-installer-linux-x86_64.sh"
        - chmod +x install.sh
        - ./install.sh --user && rm -f install.sh
        - ~/bin/bazel test --test_output=all ${OLC_PATH}:all && cd ${OLC_PATH} && mvn package

    # Java implementation. Lives in java/, tested with bazel and maven.
    - language: java
      jdk: openjdk10
      env: OLC_PATH=java
      script:
        - wget -O install.sh "https://github.com/bazelbuild/bazel/releases/download/0.24.1/bazel-0.24.1-installer-linux-x86_64.sh"
        - chmod +x install.sh
        - ./install.sh --user && rm -f install.sh
        - ~/bin/bazel test --test_output=all ${OLC_PATH}:all && cd ${OLC_PATH} && mvn package

    ## TODO: Fix java11+ issues with javadoc archive
    ## Ref: https://travis-ci.org/google/open-location-code/jobs/630142096#L2404
    # # Java implementation. Lives in java/, tested with bazel and maven.
    # # Only testing LTS releases of oraclejdk
    # # Ref: https://www.oracle.com/technetwork/java/java-se-support-roadmap.html
    # - language: java
    #   jdk: oraclejdk11
    #   env: OLC_PATH=java
    #   script:
    #     - wget -O install.sh "https://github.com/bazelbuild/bazel/releases/download/0.24.1/bazel-0.24.1-installer-linux-x86_64.sh"
    #     - chmod +x install.sh
    #     - ./install.sh --user && rm -f install.sh
    #     - ~/bin/bazel test --test_output=all ${OLC_PATH}:all && cd ${OLC_PATH} && mvn package
    #
    # # Java implementation. Lives in java/, tested with bazel and maven.
    # - language: java
    #   jdk: openjdk11
    #   env: OLC_PATH=java
    #   script:
    #     - wget -O install.sh "https://github.com/bazelbuild/bazel/releases/download/0.24.1/bazel-0.24.1-installer-linux-x86_64.sh"
    #     - chmod +x install.sh
    #     - ./install.sh --user && rm -f install.sh
    #     - ~/bin/bazel test --test_output=all ${OLC_PATH}:all && cd ${OLC_PATH} && mvn package
    #
    # # Java implementation. Lives in java/, tested with bazel and maven.
    # - language: java
    #   jdk: openjdk12
    #   env: OLC_PATH=java
    #   script:
    #     - wget -O install.sh "https://github.com/bazelbuild/bazel/releases/download/0.24.1/bazel-0.24.1-installer-linux-x86_64.sh"
    #     - chmod +x install.sh
    #     - ./install.sh --user && rm -f install.sh
    #     - ~/bin/bazel test --test_output=all ${OLC_PATH}:all && cd ${OLC_PATH} && mvn package
    #
    # # Java implementation. Lives in java/, tested with bazel and maven.
    # - language: java
    #   jdk: openjdk13
    #   env: OLC_PATH=java
    #   script:
    #     - wget -O install.sh "https://github.com/bazelbuild/bazel/releases/download/0.24.1/bazel-0.24.1-installer-linux-x86_64.sh"
    #     - chmod +x install.sh
    #     - ./install.sh --user && rm -f install.sh
    #     - ~/bin/bazel test --test_output=all ${OLC_PATH}:all && cd ${OLC_PATH} && mvn package

    # Javascript Closure library implementation. Lives in js/closure, tested with bazel.
    # We use language "c" because bazel will install all the dependencies we need, and we use path "js" for the node_js tests.
    # The Bazel configuration is cached. This saves about 3-4 minutes in the tests.
    - language: c
      env: OLC_PATH=js/closure
      before_cache:
        # Bazel will fail to install if the installation is in the cache.
        - rm -fr ${HOME}/.cache/bazel/_bazel_${USER}/install
      cache:
        # Set the timeout to fetch and unpack the cache.
        timeout: 300
        directories:
          - ${HOME}/.cache/bazel
      script:
        - rm -fr ${HOME}/.cache/bazel/_bazel_${USER}/install
        - wget -O install.sh "https://github.com/bazelbuild/bazel/releases/download/0.24.1/bazel-0.24.1-installer-linux-x86_64.sh"
        - chmod +x install.sh
        - ./install.sh --user && rm -f install.sh
        - ~/bin/bazel test ${OLC_PATH}:all
        - cd js && npm install && ./node_modules/.bin/eslint closure/*js

    # Javascript implementation. Lives in js/.
    - language: node_js
      node_js: "node"
      env: OLC_PATH=js
      script:
        - cd js
        - bash checks.sh

    # Python implementation. Lives in python/, tested with bazel.
    - language: python
      python: 2.7
      env: OLC_PATH=python
      script:
        - wget -O install.sh "https://github.com/bazelbuild/bazel/releases/download/0.24.1/bazel-0.24.1-installer-linux-x86_64.sh"
        - chmod +x install.sh
        - ./install.sh --user && rm -f install.sh
        - ~/bin/bazel test --test_output=all ${OLC_PATH}:all
        - cd ${OLC_PATH} && bash format_check.sh

    # Python implementation. Lives in python/, tested with bazel.
    - language: python
      python: 3.6
      env: OLC_PATH=python
      script:
        - wget -O install.sh "https://github.com/bazelbuild/bazel/releases/download/0.24.1/bazel-0.24.1-installer-linux-x86_64.sh"
        - chmod +x install.sh
        - ./install.sh --user && rm -f install.sh
        - ~/bin/bazel test --test_output=all ${OLC_PATH}:all
        - cd ${OLC_PATH} && bash format_check.sh

    # Python implementation. Lives in python/, tested with bazel.
    - language: python
      python: 3.7
      env: OLC_PATH=python
      script:
        - wget -O install.sh "https://github.com/bazelbuild/bazel/releases/download/0.24.1/bazel-0.24.1-installer-linux-x86_64.sh"
        - chmod +x install.sh
        - ./install.sh --user && rm -f install.sh
        - ~/bin/bazel test --test_output=all ${OLC_PATH}:all
        - cd ${OLC_PATH} && bash format_check.sh

    # Python implementation. Lives in python/, tested with bazel.
    - language: python
      python: 3.8
      env: OLC_PATH=python
      script:
        - wget -O install.sh "https://github.com/bazelbuild/bazel/releases/download/0.24.1/bazel-0.24.1-installer-linux-x86_64.sh"
        - chmod +x install.sh
        - ./install.sh --user && rm -f install.sh
        - ~/bin/bazel test --test_output=all ${OLC_PATH}:all
        - cd ${OLC_PATH} && bash format_check.sh

    # Ruby implementation. Lives in ruby/
    - language: ruby
      rvm: 2.6.3
      env: OLC_PATH=ruby
      script:
        - gem install rubocop
        - gem install test-unit
        - cd ruby && ruby test/plus_codes_test.rb
        - rubocop --config rubocop.yml

    # Rust implementation. Lives in rust/
    - language: rust
      env: OLC_PATH=rust
      before_script:
        - rustup component add rustfmt
      # Adding caching of .cargo doesn't improve the build/test times.
      script:
        - cd rust/
        - cargo fmt --all -- --check
        - cargo build
        - cargo test -- --nocapture
